openapi: 3.0.0
info:
  title: Key Connect API
  description: Blockchain access made simple
  version: 1.1.0
  contact:
    name: Manthan Dave
    url: https://www.manthanhd.com
    email: manthan@keyconnect.app
  license:
    name: The Apache License, Version 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.txt
servers:
  - url: 'https://api.keyconnect.app'
    description: Production KeyConnect server
  - url: 'http://localhost:8080'
    description: Local KeyConnect server
paths:
  /v1/server/status:
    get:
      summary: Gets the Key Connect server status.
      description: Gets the Key Connect server status along with any error information.
      operationId: getServerStatus
      tags:
        - server
        - status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStatusResponse'
  /v1/blockchains/status:
    get:
      summary: Gets a list of all supported blockchains and their statuses.
      description: Key Connect server keeps track of the individual status of the supported blockchains. Use this API to check the blockchain statuses.
      operationId: getBlockchainsStatus
      tags:
        - blockchains
        - status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableBlockchains'
  /v1/batch/blockchains/accounts/info:
    post:
      summary: Gets account details of all specified accounts
      description: Batch call that returns details of all accounts in the request across all specified blockchains.
      operationId: getBlockchainsAccounts
      tags:
        - batch
        - blockchains
        - accounts
      parameters:
        - name: network
          in: query
          description: Blockchain network to get the status from.
          required: false
          schema:
            type: string
            example: testnet
      requestBody:
        description: "List of accounts with their chainIds to get info for"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsInfoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsInfoResponse'
  /v1/blockchains/{chainId}/status:
    get:
      summary: Returns the status of the provided blockchain.
      description: Gets status of the provided blockchain identified by `chainId`.
      operationId: getBlockchainStatus
      tags:
        - blockchains
        - status
      parameters:
        - name: chainId
          in: path
          description: ID of the block chain
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
        - name: network
          in: query
          description: Blockchain network to get the status from.
          required: false
          schema:
            type: string
            example: testnet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainStatus'
  /v1/blockchains/{chainId}/fee:
    get:
      summary: Returns the blockchain transaction fee.
      description: Gets fee of the provided blockchain identified by `chainId`.
      operationId: getFee
      tags:
        - blockchains
      parameters:
        - name: chainId
          in: path
          description: ID of the block chain
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
        - name: network
          in: query
          description: Blockchain network to get the status from.
          required: false
          schema:
            type: string
            example: testnet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainFee'
  /v1/blockchains/{chainId}/accounts/{accountId}:
    get:
      summary: Returns account / wallet information for the provided `chainId` representing the blockchain.
      description: Gets account / wallet information like `balance`, `lastTransactionId` etc of the specified blockchain identified by `chainId`.
      operationId: getAccountInfo
      tags:
        - blockchains
        - accounts
      parameters:
        - name: chainId
          in: path
          description: ID of the block chain
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
            example: xrp
        - name: network
          in: query
          description: "
            Blockchain network to get the account info from. For example, for XRP this
            would be one of (testnet/devnet/mainnet). More information regarding what
            environments are available can be obtained from /v1/blockchains/{chainId}/status
            endpoint.
          "
          required: false
          schema:
            type: string
            example: testnet
            default: "mainnet"
        - name: accountId
          in: path
          description: Identifier representing the account. This is most likely the wallet address.
          required: true
          schema:
            type: string
            example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        - name: fiat
          in: query
          description: Used to provide equivalent value in specified fiat
          required: false
          schema:
            type: string
            example: USD
            enum:
              - USD
              - GBP
              - EUR
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainAccountInfo'
  /v1/blockchains/{chainId}/accounts/{accountId}/fund:
    post:
      summary: Funds the given account if funding is available for the specified network.
      description: Uses the blockchain funding APIs to fund a given account.
      operationId: fundAccount
      tags:
        - blockchains
        - accounts
        - funding
      parameters:
        - name: chainId
          in: path
          description: ID of the block chain
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
            example: xrp
        - name: network
          in: query
          description: "
              Blockchain network to get the account info from. For example, for XRP this
              would be one of (testnet/devnet/mainnet). More information regarding what
              environments are available can be obtained from /v1/blockchains/{chainId}/status
              endpoint.
            "
          required: false
          schema:
            type: string
            example: testnet
            default: "mainnet"
        - name: accountId
          in: path
          description: Identifier representing the account. This is most likely the wallet address.
          required: true
          schema:
            type: string
            example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
      responses:
        '202':
          description: Funding request was accepted, it will be fulfilled momentarily.

  /v1/blockchains/{chainId}/accounts/{accountId}/transactions:
    get:
      summary: Returns paginated list of transactions.
      description: Gets transactions for given `accountId` on a given blockchain identified by the `chainId` parameter. Return the `cursor` value in the next call to get the next page.
      operationId: getAccountTransactions
      tags:
        - blockchains
        - accounts
        - transactions
      parameters:
        - name: chainId
          in: path
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
          example: xrp
        - name: network
          in: query
          description: "
                Blockchain network to get the account info from. For example, for XRP this
                would be one of (testnet/devnet/mainnet). More information regarding what
                environments are available can be obtained from /v1/blockchains/{chainId}/status
                endpoint.
              "
          required: false
          schema:
            type: string
            example: testnet
            default: "mainnet"
        - name: accountId
          in: path
          description: Identifier representing the account. This is most likely the wallet address.
          required: true
          schema:
            type: string
            example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        - name: cursor
          in: query
          description: Cursor representing position among pages. Pass the cursor from previous get transactions response to get the next page.
          required: false
          schema:
            type: string
            description: Format varies by the blockchain. For XRP, the value of `cursor` will be the `ledger:seq` from the marker object.
            example: "57112007:13"
        - name: fiat
          in: query
          description: Used to provide equivalent value in specified fiat
          required: false
          schema:
            type: string
            example: USD
            enum:
              - USD
              - GBP
              - EUR
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BlockchainAccountTransactions'
  /v1/blockchains/{chainId}/accounts/{accountId}/payments:
    get:
      summary: Returns paginated list of payments.
      description: Gets payments for given `accountId` on a given blockchain identified by the `chainId` parameter. Return the `cursor` value in the next call to get the next page.
      operationId: getAccountPayments
      tags:
        - blockchains
        - accounts
        - payments
      parameters:
        - name: chainId
          in: path
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
          example: xrp
        - name: network
          in: query
          description: "
                  Blockchain network to get the account info from. For example, for XRP this
                  would be one of (testnet/devnet/mainnet). More information regarding what
                  environments are available can be obtained from /v1/blockchains/{chainId}/status
                  endpoint.
                "
          required: false
          schema:
            type: string
            example: testnet
            default: "mainnet"
        - name: accountId
          in: path
          description: Identifier representing the account. This is most likely the wallet address.
          required: true
          schema:
            type: string
            example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        - name: cursor
          in: query
          description: Cursor representing position among pages. Pass the cursor from previous get payments response to get the next page.
          required: false
          schema:
            type: string
            description: Format varies by the blockchain. For XRP, the value of `cursor` will be the `ledger:seq` from the marker object.
            example: "57112007:13"
        - name: fiat
          in: query
          description: Used to provide equivalent value in specified fiat
          required: false
          schema:
            type: string
            example: USD
            enum:
              - USD
              - GBP
              - EUR
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BlockchainAccountPayments'
  /v1/blockchains/{chainId}/transactions/{hash}:
    get:
      summary: Get a single transaction object by its provided `hash` on the specified `chainId`.
      description: Returned transaction object might be in greater detail than the one provided in the list.
      operationId: getTransaction
      tags:
        - blockchains
        - transactions
      parameters:
        - name: chainId
          in: path
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
        - name: hash
          in: path
          description: Hash of the transaction to lookup
          required: true
          schema:
            type: string
        - name: network
          in: query
          description: "
                        Blockchain network to get the account info from. For example, for XRP this
                        would be one of (testnet/devnet/mainnet). More information regarding what
                        environments are available can be obtained from /v1/blockchains/{chainId}/status
                        endpoint.
                      "
          required: false
          schema:
            type: string
            example: testnet
            default: "mainnet"
        - name: fiat
          in: query
          description: Used to provide equivalent value in specified fiat
          required: false
          schema:
            type: string
            example: USD
            enum:
              - USD
              - GBP
              - EUR
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/BlockchainAccountTransaction'
  /v1/blockchains/{chainId}/transactions:
    post:
      summary: Submit a transaction to the blockchain.
      description: Provided transaction object is submitted directly to the blockchain identified by `chainId` as is.
      operationId: submitTransaction
      tags:
        - blockchains
        - transactions
      parameters:
        - name: chainId
          in: path
          required: true
          schema:
            type: string
            enum:
              - xrp
              - eth
        - name: network
          in: query
          description: "
                        Blockchain network to get the account info from. For example, for XRP this
                        would be one of (testnet/devnet/mainnet). More information regarding what
                        environments are available can be obtained from /v1/blockchains/{chainId}/status
                        endpoint.
                      "
          required: false
          schema:
            type: string
            example: testnet
            default: "mainnet"
      requestBody:
        description: "Request payload containing the transaction to submit to specified `chainId`."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitTransactionRequest'
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitTransactionResult'
  /v1/blockchains/xrp/generator/payment:
    get:
      summary: Generates a transaction as a payment.
      description: Helper method to generate a transaction object for the purpose of a payment between the source account identified by `sourceAccount` and destination account idenfied by `destinationAccount` for the value of `amount`.
      operationId: generateXrpTransaction
      tags:
        - blockchains
        - generator
      parameters:
        - name: sourceAccount
          required: true
          in: query
          description: Source account
          schema:
            type: string
            example: "rPT1Sjq2YGrBMTttX4GZHjKu9dyfzbpAYe"
        - name: destinationAccount
          required: true
          in: query
          description: Destination account
          schema:
            type: string
            example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        - name: destinationTag
          required: false
          in: query
          description: Destination tag
          schema:
            type: number
            example: 58871619
        - name: amount
          required: true
          in: query
          description: Payment amount in drops
          schema:
            type: string
            example: "10000000"
        - name: fee
          required: false
          in: query
          description: "Fee to the ledger in drops. If this field is omitted, then `network` must be specified."
          schema:
            type: string
            example: "5200"
        - name: network
          in: query
          description: "
                              Blockchain network to get the account info from. For XRP this would be
                              one of (testnet/devnet/mainnet). More information regarding what
                              environments are available can be obtained from /v1/blockchains/{chainId}/status
                              endpoint. This field is required if `fee` is not specified in order to
                              dynamically obtain the fee from the network.
                            "
          required: false
          schema:
            type: string
            example: testnet
            default: "mainnet"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v1/rates/{base}/{counter}:
    get:
      summary: Gets the currency conversion rate for the provided base and counter currency.
      description: Returns the applicable rate to convert between the provided base and counter currency.
      operationId: getRate
      tags:
        - rates
      parameters:
        - in: path
          name: base
          description: "Base currency"
          example: ETH
          required: true
          schema:
            type: string
        - in: path
          name: counter
          description: "Counter currency"
          example: USD
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateResponse'

components:
  schemas:
    ServerStatusResponse:
      description: Represents the status of the Key Connect server.
      properties:
        status:
          type: string
          description: Status of the server
          enum:
            - healthy
            - unhealthy
        errors:
          type: array
          description: Any server errors if the server is unhealthy
          items:
            type: object
            description: Array object
            properties:
              category:
                type: string
                description: Error category
                enum:
                  - blockchain
                  - database
                  - internal
              severity:
                type: string
                description: Error severity
                enum:
                  - critical
                  - high
                  - medium
                  - low
                  - warning
                  - info
              message:
                type: string
                description: Error message
    BlockchainStatusResponse:
      description: Represents the status of the block chain. This object is cached as per the `lastCheck` attribute.
      properties:
        status:
          type: string
          description: Status of the block chain
          enum:
            - connected
            - disconnected
        lastCheck:
          type: string
          description: UTC timestamp representing when the status was last checked
    ServerErrorObject:
      description: Represents information regarding a error.
      properties:
        category:
          type: string
          description: Error category
          enum:
            - blockchain
            - database
            - internal
        severity:
          type: string
          description: Error severity
          enum:
            - critical
            - high
            - medium
            - low
            - warning
            - info
        message:
          type: string
          description: Error message
    AvailableBlockchains:
      description: List of available blockchains and their statuses
      properties:
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainStatus'
    BlockchainStatus:
      description: Represents a blockchain and its status.
      properties:
        chainId:
          type: string
          example: 'xrp'
        networks:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainNetwork'
    BlockchainNetwork:
      description: Blockchain network object identifying the group and the list of servers under this group.
      properties:
        group:
          type: string
          example: 'testnet'
        servers:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainNetworkServerStatus'
    BlockchainNetworkServerStatus:
      description: Represents status of a blockchain network.
      properties:
        host:
          type: string
        status:
          type: string
          enum:
            - healthy
            - unhealthy
        lastCheck:
          type: string
          example: '2020-09-20 08:32:20'
    BlockchainAccountInfo:
      description: Represents information regarding a blockchain wallet / account.
      properties:
        chainId:
          type: string
          enum:
            - xrp
            - eth
        network:
          type: string
          example: testnet
        server:
          type: string
          example: "https://s.altnet.rippletest.net:51234/"
        accountId:
          type: string
          example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        balance:
          $ref: '#/components/schemas/CurrencyValue'
        value:
          $ref: '#/components/schemas/GenericCurrencyValue'
        subAccounts:
          type: array
          description: List of sub accounts and their balances. ERC20 tokens and their balances in case of ethereum.
          items:
            $ref: '#/components/schemas/SubAccountInfo'
        lastTransactionId:
          type: string
          example: "4294BEBE5B569A18C0A2702387C9B1E7146DC3A5850C1E87204951C6FDAA4C42"
        nonce:
          type: string
          description: Current ledger nonce or index
          example: 1493135
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ServerErrorObject'
    CurrencyValue:
      description: Simple object representing `amount` as string in a specific `currency`.
      properties:
        amount:
          type: string
        issuer:
          type: string
          nullable: true
        currency:
          type: string
          enum:
            - xrp
            - drops
            - eth
            - gas
      required:
        - amount
        - currency
    BlockchainAccountTransactions:
      description: List of transactions for a specified blockchain account / wallet within the specified `cursor`.
      properties:
        chainId:
          type: string
          enum:
            - xrp
            - eth
        network:
          type: string
          example: testnet
        server:
          type: string
          example: "https://s.altnet.rippletest.net:51234/"
        accountId:
          type: string
          example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        cursor:
          type: string
          description: Format varies by the blockchain. For XRP, the value of `cursor` will be the `ledger:seq` from the marker object. This value is null when there are no more pages.
          example: "57112007:13"
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainAccountTransactionItem'
    BlockchainAccountTransactionItem:
      description: Individual transaction for a specific blockchain account / wallet.
      properties:
        status:
          type: string
          description: One of `success`, `failure` or `pending` in most cases. In case the server returns unusual status, this attribute will reflect the raw value.
          example: "success"
        type:
          type: string
          example: "Payment"
        sourceAccount:
          type: string
          example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        destinationAccount:
          type: string
          example: "rU2mEJSLqBRkYLVTv55rFTgQajkLTnT6mA"
        destinationTag:
          type: string
          example: "255577"
        fee:
          $ref: '#/components/schemas/CurrencyValue'
        amount:
          $ref: '#/components/schemas/CurrencyValue'
        value:
          $ref: '#/components/schemas/GenericCurrencyValue'
        hash:
          type: string
          example: "558FB77C856092E191D3117C13A1BDB299050B5140CDF6916F50F026620463FE"
    BlockchainAccountTransaction:
      description: Represents a blockchain account transaction.
      properties:
        chainId:
          type: string
          enum:
            - xrp
            - eth
        network:
          type: string
          example: testnet
        server:
          type: string
          example: "https://s.altnet.rippletest.net:51234/"
        transaction:
          $ref: '#/components/schemas/BlockchainAccountTransactionItem'
    SubmitTransactionRequest:
      properties:
        transaction:
          type: string
          example: "1200002280000000240000001E61D4838D7EA4C6800000000000000000000000000055534400000000004B4E9C06F24296074F7BC48F92A97916C6DC5EA968400000000000000B732103AB40A0490F9B7ED8DF29D246BF2D6269820A0EE7742ACDD457BEA7C7D0931EDB7447304502210095D23D8AF107DF50651F266259CC7139D0CD0C64ABBA3A958156352A0D95A21E02207FCF9B77D7510380E49FF250C21B57169E14E9B4ACFD314CEDC79DDD0A38B8A681144B4E9C06F24296074F7BC48F92A97916C6DC5EA983143E9D4A2B8AA0780F682D136F7A56D6724EF53754"
          description: The transaction blob as required by the blockchain you are submitting to.
    SubmitTransactionResult:
      description: Represents the result of the submission of a given blockchain transaction.
      properties:
        chainId:
          type: string
          enum:
            - xrp
            - eth
        network:
          type: string
          example: testnet
        server:
          type: string
          example: "https://s.altnet.rippletest.net:51234/"
        transaction:
          $ref: '#/components/schemas/BlockchainAccountTransactionItem'
    BlockchainAccountPayments:
      properties:
        chainId:
          type: string
          enum:
            - xrp
            - eth
        network:
          type: string
          example: testnet
        server:
          type: string
          example: "https://s.altnet.rippletest.net:51234/"
        accountId:
          type: string
          example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        cursor:
          type: string
          description: Format varies by the blockchain. For XRP, the value of `cursor` will be the `ledger:seq` from the marker object. This value is null when there are no more pages.
          example: "57112007:13"
        payments:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainAccountPaymentItem'
    BlockchainAccountPaymentItem:
      properties:
        status:
          type: string
          description: One of `success`, `failure` or `pending` in most cases. In case the server returns unusual status, this attribute will reflect the raw value.
          example: "success"
        sourceAccount:
          type: string
          example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
        destinationAccount:
          type: string
          example: "rU2mEJSLqBRkYLVTv55rFTgQajkLTnT6mA"
        destinationTag:
          type: string
          example: "255577"
        fee:
          $ref: '#/components/schemas/CurrencyValue'
        amount:
          $ref: '#/components/schemas/CurrencyValue'
        value:
          $ref: '#/components/schemas/GenericCurrencyValue'
        hash:
          type: string
          example: "558FB77C856092E191D3117C13A1BDB299050B5140CDF6916F50F026620463FE"
    BlockchainFee:
      description: Blockchain fee.
      properties:
        chainId:
          type: string
          enum:
            - xrp
            - eth
        network:
          type: string
          example: testnet
        server:
          type: string
          example: "https://s.altnet.rippletest.net:51234/"
        fee:
          $ref: '#/components/schemas/CurrencyValue'
    SubAccountInfo:
      description: Represents a sub-account. ERC20 token account in case of ethereum.
      properties:
        accountId:
          type: string
          description: ID of the sub account. Contract hash in case of ethereum token.
          example: 0xfF20817765cB7f73d4bde2e66e067E58D11095C2
        balance:
          $ref: '#/components/schemas/GenericCurrencyValue'
        value:
          $ref: '#/components/schemas/GenericCurrencyValue'
    ExceptionalResponse:
      properties:
        timestamp:
          type: number
          example: 1609519112841
        status:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: "Specified network is not a valid network for the block chain"
        path:
          type: string
          example: "/v1/blockchains/xrp/accounts/rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv/transactions"
    GenericCurrencyValue:
      properties:
        amount:
          type: string
        issuer:
          type: string
          nullable: true
        currency:
          type: string
    AccountsInfoRequest:
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountsInfoRequestItem'
    AccountsInfoResponse:
      properties:
        network:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainAccountInfo'
    AccountsInfoRequestItem:
      properties:
        chainId:
          type: string
          description: ID of the block chain
          enum:
            - xrp
            - eth
          example: xrp
        network:
          type: string
          description: "
                        Blockchain network to get the account info from. For XRP this would be
                        one of (testnet/devnet/mainnet). More information regarding what
                        environments are available can be obtained from /v1/blockchains/{chainId}/status
                        endpoint. This field is required if `fee` is not specified in order to
                        dynamically obtain the fee from the network.
                      "
          default: "mainnet"
        accountId:
          type: string
          description: Identifier representing the account. This is most likely the wallet address.
          example: "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv"
      required:
        - chainId
        - accountId
    Rate:
      properties:
        base:
          type: string
          description: Base currency
          example: ETH
        counter:
          type: string
          description: Counter currency
          example: USD
        price:
          type: string
          description: Rate to convert the base currency into the counter currency
          example: 1500
    RateResponse:
      properties:
        avg:
          $ref: '#/components/schemas/Rate'
